# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Deploy Artifacts to Server
        env:
          SERVER_IP: 103.162.14.151
          SERVER_USER: root
        run: |
          echo "$SERVER_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H 103.162.14.151 >> ~/.ssh/known_hosts
          
          # Hiển thị thông tin về private key
          ssh-keygen -l -f private_key.pem

          # Copy .jar file to the server
          scp -i private_key.pem target/*.jar root@103.162.14.151:/opt/deployment
          # Run the deployment script on the server to start the app
          ssh -i private_key.pem root@103.162.14.151 'bash /opt/deployment/start_myapp.sh'
          rm private_key.pem


#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
